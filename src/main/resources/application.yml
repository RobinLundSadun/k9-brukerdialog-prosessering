no.nav.security.jwt:
  client:
    registration:
      azure-k9-joark:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${K9_JOARK_SCOPE}
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
      azure-k9-mellomlagring:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${K9_MELLOMLAGRING_SCOPE}
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}

spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    streams:
      application-id: ${KAFKA_STREAMS_APPLICATION_ID}
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: org.springframework.kafka.support.serializer.JsonSerde

    properties:
      schema:
        registry:
          url: ${SCHEMA_REGISTRY_URL}
          basic:
            auth:
              credentials:
                source: USER_INFO
              username: ${KAFKA_SCHEMA_REGISTRY_USER}
              password: ${KAFKA_SCHEMA_REGISTRY_PASSWORD}
